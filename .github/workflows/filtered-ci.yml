name: Filtered CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      service-a: ${{ steps.filter.outputs.service-a }}
      service-b: ${{ steps.filter.outputs.service-b }}
      shared-lib: ${{ steps.filter.outputs.shared-lib }}
    steps:
      - uses: actions/checkout@v3

      - name: 변경 감지
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            service-a:
              - 'packages/service-a/**'
              - 'packages/share-lib/**'
            service-b:
              - 'packages/service-b/**'
              - 'packages/share-lib/**'
            shared-lib:
              - 'packages/share-lib/**'

  build:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.service-a == 'true' || needs.detect-changes.outputs.service-b == 'true' || needs.detect-changes.outputs.shared-lib == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build shared-lib
        if: ${{ needs.detect-changes.outputs.shared-lib == 'true' }}
        run: |
          cd packages/share-lib
          pnpm run build

      - name: Build service-a
        if: ${{ needs.detect-changes.outputs.service-a == 'true' }}
        run: |
          cd packages/service-a
          pnpm run build

      - name: Build service-b
        if: ${{ needs.detect-changes.outputs.service-b == 'true' }}
        run: |
          cd packages/service-b
          pnpm run build

      - name: Test
        run: pnpm test